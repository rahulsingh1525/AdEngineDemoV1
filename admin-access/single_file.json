File {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  metadata: {
    kind: 'storage#object',
    id: 'adengine-new.appspot.com/ad_bucket/Food/Swiggy Binging Ad 20 sec 3.mp4/1593347245604751',
    selfLink: 'https://www.googleapis.com/storage/v1/b/adengine-new.appspot.com/o/ad_bucket%2FFood%2FSwiggy%20Binging%20Ad%2020%20sec%203.mp4',
    mediaLink: 'https://storage.googleapis.com/download/storage/v1/b/adengine-new.appspot.com/o/ad_bucket%2FFood%2FSwiggy%20Binging%20Ad%2020%20sec%203.mp4?generation=1593347245604751&alt=media',
    name: 'ad_bucket/Food/Swiggy Binging Ad 20 sec 3.mp4',
    bucket: 'adengine-new.appspot.com',
    generation: '1593347245604751',
    metageneration: '1',
    contentType: 'video/mp4',
    storageClass: 'STANDARD',
    size: '2420419',
    md5Hash: 'RuAQvgSNaEfbBMZSOcgZbg==',
    contentDisposition: "inline; filename*=utf-8''Swiggy%20Binging%20Ad%2020%20sec%203.mp4",
    crc32c: 'j3kXcw==',
    etag: 'CI//z4TBpOoCEAE=',
    timeCreated: '2020-06-28T12:27:25.604Z',
    updated: '2020-06-28T12:27:25.604Z',
    timeStorageClassUpdated: '2020-06-28T12:27:25.604Z',
    metadata: {
      firebaseStorageDownloadTokens: 'b61fb968-aeb3-40ad-9f6f-72b9d96fa758'
    }
  },
  baseUrl: '/o',
  parent: Bucket {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    metadata: {},
    baseUrl: '/b',
    parent: Storage {
      baseUrl: 'https://storage.googleapis.com/storage/v1',
      apiEndpoint: 'storage.googleapis.com',
      timeout: undefined,
      globalInterceptors: [],
      interceptors: [],
      packageJson: [Object],
      projectId: 'adengine-new',
      projectIdRequired: false,
      Promise: [Function: Promise],
      makeAuthenticatedRequest: [Function],
      authClient: [GoogleAuth],
      getCredentials: [Function: bound getCredentials],
      acl: [Object],
      getBucketsStream: [Function],
      getHmacKeysStream: [Function]
    },
    id: 'adengine-new.appspot.com',
    createMethod: [Function: bound wrapper],
    methods: {
      create: [Object],
      delete: [Object],
      exists: [Object],
      get: [Object],
      getMetadata: [Object],
      setMetadata: [Object]
    },
    interceptors: [],
    pollIntervalMs: undefined,
    Promise: [Function: Promise],
    name: 'adengine-new.appspot.com',
    storage: Storage {
      baseUrl: 'https://storage.googleapis.com/storage/v1',
      apiEndpoint: 'storage.googleapis.com',
      timeout: undefined,
      globalInterceptors: [],
      interceptors: [],
      packageJson: [Object],
      projectId: 'adengine-new',
      projectIdRequired: false,
      Promise: [Function: Promise],
      makeAuthenticatedRequest: [Function],
      authClient: [GoogleAuth],
      getCredentials: [Function: bound getCredentials],
      acl: [Object],
      getBucketsStream: [Function],
      getHmacKeysStream: [Function]
    },
    userProject: undefined,
    acl: Acl {
      owners: [Object],
      readers: [Object],
      writers: [Object],
      pathPrefix: '/acl',
      request_: [Function: bound request],
      default: [Acl]
    },
    iam: Iam {
      request_: [Function: bound request],
      resourceId_: 'buckets/[object Promise]'
    },
    getFilesStream: [Function]
  },
  id: 'ad_bucket%2FFood%2FSwiggy%20Binging%20Ad%2020%20sec%203.mp4',
  createMethod: undefined,
  methods: {
    delete: { reqOpts: [Object] },
    exists: { reqOpts: [Object] },
    get: { reqOpts: [Object] },
    getMetadata: { reqOpts: [Object] },
    setMetadata: { reqOpts: [Object] }
  },
  interceptors: [],
  pollIntervalMs: undefined,
  Promise: [Function: Promise],
  create: undefined,
  bucket: Bucket {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    metadata: {},
    baseUrl: '/b',
    parent: Storage {
      baseUrl: 'https://storage.googleapis.com/storage/v1',
      apiEndpoint: 'storage.googleapis.com',
      timeout: undefined,
      globalInterceptors: [],
      interceptors: [],
      packageJson: [Object],
      projectId: 'adengine-new',
      projectIdRequired: false,
      Promise: [Function: Promise],
      makeAuthenticatedRequest: [Function],
      authClient: [GoogleAuth],
      getCredentials: [Function: bound getCredentials],
      acl: [Object],
      getBucketsStream: [Function],
      getHmacKeysStream: [Function]
    },
    id: 'adengine-new.appspot.com',
    createMethod: [Function: bound wrapper],
    methods: {
      create: [Object],
      delete: [Object],
      exists: [Object],
      get: [Object],
      getMetadata: [Object],
      setMetadata: [Object]
    },
    interceptors: [],
    pollIntervalMs: undefined,
    Promise: [Function: Promise],
    name: 'adengine-new.appspot.com',
    storage: Storage {
      baseUrl: 'https://storage.googleapis.com/storage/v1',
      apiEndpoint: 'storage.googleapis.com',
      timeout: undefined,
      globalInterceptors: [],
      interceptors: [],
      packageJson: [Object],
      projectId: 'adengine-new',
      projectIdRequired: false,
      Promise: [Function: Promise],
      makeAuthenticatedRequest: [Function],
      authClient: [GoogleAuth],
      getCredentials: [Function: bound getCredentials],
      acl: [Object],
      getBucketsStream: [Function],
      getHmacKeysStream: [Function]
    },
    userProject: undefined,
    acl: Acl {
      owners: [Object],
      readers: [Object],
      writers: [Object],
      pathPrefix: '/acl',
      request_: [Function: bound request],
      default: [Acl]
    },
    iam: Iam {
      request_: [Function: bound request],
      resourceId_: 'buckets/[object Promise]'
    },
    getFilesStream: [Function]
  },
  storage: Storage {
    baseUrl: 'https://storage.googleapis.com/storage/v1',
    apiEndpoint: 'storage.googleapis.com',
    timeout: undefined,
    globalInterceptors: [],
    interceptors: [],
    packageJson: {
      _from: '@google-cloud/storage@^4.1.2',
      _id: '@google-cloud/storage@4.7.0',
      _inBundle: false,
      _integrity: 'sha512-f0guAlbeg7Z0m3gKjCfBCu7FG9qS3M3oL5OQQxlvGoPtK7/qg3+W+KQV73O2/sbuS54n0Kh2mvT5K2FWzF5vVQ==',
      _location: '/@google-cloud/storage',
      _phantomChildren: [Object],
      _requested: [Object],
      _requiredBy: [Array],
      _resolved: 'https://registry.npmjs.org/@google-cloud/storage/-/storage-4.7.0.tgz',
      _shasum: 'a7466086a83911c7979cc238d00a127ffb645615',
      _spec: '@google-cloud/storage@^4.1.2',
      _where: 'D:\\src\\AdEngine\\admin-access\\node_modules\\firebase-admin',
      author: [Object],
      bugs: [Object],
      bundleDependencies: false,
      dependencies: [Object],
      deprecated: false,
      description: 'Cloud Storage Client Library for Node.js',
      devDependencies: [Object],
      engines: [Object],
      files: [Array],
      homepage: 'https://github.com/googleapis/nodejs-storage#readme',
      keywords: [Array],
      license: 'Apache-2.0',
      main: './build/src/index.js',
      name: '@google-cloud/storage',
      repository: [Object],
      scripts: [Object],
      types: './build/src/index.d.ts',
      version: '4.7.0'
    },
    projectId: 'adengine-new',
    projectIdRequired: false,
    Promise: [Function: Promise],
    makeAuthenticatedRequest: [Function: makeAuthenticatedRequest] {
      getCredentials: [Function: bound getCredentials],
      authClient: [GoogleAuth]
    },
    authClient: GoogleAuth {
      checkIsGCE: undefined,
      jsonContent: [Object],
      cachedCredential: [JWT],
      _cachedProjectId: 'adengine-new',
      keyFilename: undefined,
      scopes: [Array],
      clientOptions: undefined
    },
    getCredentials: [Function: bound getCredentials],
    acl: {
      OWNER_ROLE: 'OWNER',
      READER_ROLE: 'READER',
      WRITER_ROLE: 'WRITER'
    },
    getBucketsStream: [Function],
    getHmacKeysStream: [Function]
  },
  kmsKeyName: undefined,
  userProject: undefined,
  name: 'ad_bucket/Food/Swiggy Binging Ad 20 sec 3.mp4',
  acl: Acl {
    owners: {
      addAllAuthenticatedUsers: [Function],
      deleteAllAuthenticatedUsers: [Function],
      addAllUsers: [Function],
      deleteAllUsers: [Function],
      addDomain: [Function],
      deleteDomain: [Function],
      addGroup: [Function],
      deleteGroup: [Function],
      addProject: [Function],
      deleteProject: [Function],
      addUser: [Function],
      deleteUser: [Function]
    },
    readers: {
      addAllAuthenticatedUsers: [Function],
      deleteAllAuthenticatedUsers: [Function],
      addAllUsers: [Function],
      deleteAllUsers: [Function],
      addDomain: [Function],
      deleteDomain: [Function],
      addGroup: [Function],
      deleteGroup: [Function],
      addProject: [Function],
      deleteProject: [Function],
      addUser: [Function],
      deleteUser: [Function]
    },
    writers: {
      addAllAuthenticatedUsers: [Function],
      deleteAllAuthenticatedUsers: [Function],
      addAllUsers: [Function],
      deleteAllUsers: [Function],
      addDomain: [Function],
      deleteDomain: [Function],
      addGroup: [Function],
      deleteGroup: [Function],
      addProject: [Function],
      deleteProject: [Function],
      addUser: [Function],
      deleteUser: [Function]
    },
    pathPrefix: '/acl',
    request_: [Function: bound request]
  }
}
